/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 rabbit-hole-area.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, useMatcapTexture, useTexture, shaderMaterial } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'
import * as THREE from 'three'
import { useLoader, extend, useFrame } from '@react-three/fiber'
import portalVertexShader from '../../shaders/portal/vertex.glsl' // TODO not a big fan of paths like this
import portalFragmentShader from '../../shaders/portal/fragment.glsl'
import MatcapManager from 'src/MatcapManager.js'
import GenericArea from 'src/components/areas/GenericArea.jsx'

const PortalMaterial = shaderMaterial(
    {
        uTime: 0,
        uColorStart: new THREE.Color('#ffffff'),
        uColorEnd: new THREE.Color('#000000')
    },
    portalVertexShader,
    portalFragmentShader
)

extend({ PortalMaterial })

export default function RabbitHoleArea(props) {

    const { nodes, materials } = useGLTF('./models/rabbit-hole-area.glb')
    const matcapManager = new MatcapManager()

    // Animate portal
    // const portalMaterialRef = useRef()
    // useFrame((state, delta) => {
    //     portalMaterialRef.current.uTime += delta
    // })

    return <>
        <group {...props} dispose={null}>
            <GenericArea nodes={nodes} />
        </group>
    </>
}

useGLTF.preload('./models/rabbit-hole-area.glb')
